{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Sample/sample.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst QuestionForm = ({\n  jsonFile\n}) => {\n  const [formData, setFormData] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0); // Load the JSON file and frame questions based on keys\n\n  useEffect(() => {\n    if (jsonFile) {\n      // Initialize formData with keys from jsonFile\n      const initialData = { ...jsonFile\n      };\n      setFormData(initialData); // Generate questions from jsonFile keys\n\n      const generatedQuestions = Object.keys(jsonFile).map(key => ({\n        key,\n        label: `Please enter a value for '${key}':`\n      }));\n      setQuestions(generatedQuestions);\n    }\n  }, [jsonFile]); // Function to handle the form submission and move to the next question\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const input = event.target.elements.questionInput.value; // Update the form data\n\n    setFormData({ ...formData,\n      [questions[currentQuestion].key]: input\n    }); // Move to the next question\n\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, currentQuestion < questions.length ? React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, questions[currentQuestion].label), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"questionInput\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Next\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Thank you! Here is the filled JSON:\"), React.createElement(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, JSON.stringify(formData, null, 2))));\n}; // Usage of QuestionForm with a sample JSON file\n\n\nconst Sample = () => {\n  const sampleJson = {\n    one: \"\",\n    two: \"\",\n    three: {\n      \"t-one\": \"\",\n      \"t-two\": \"\"\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Dynamic JSON Questionnaire\"), React.createElement(QuestionForm, {\n    jsonFile: sampleJson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nexport default Sample;","map":{"version":3,"sources":["/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Sample/sample.jsx"],"names":["React","useState","useEffect","QuestionForm","jsonFile","formData","setFormData","questions","setQuestions","currentQuestion","setCurrentQuestion","initialData","generatedQuestions","Object","keys","map","key","label","handleSubmit","event","preventDefault","input","target","elements","questionInput","value","length","JSON","stringify","Sample","sampleJson","one","two","three"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,CAAD,CAAtD,CAHqC,CAKrC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,QAAJ,EAAc;AACZ;AACA,YAAMO,WAAW,GAAG,EAAE,GAAGP;AAAL,OAApB;AACAE,MAAAA,WAAW,CAACK,WAAD,CAAX,CAHY,CAKZ;;AACA,YAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYV,QAAZ,EAAsBW,GAAtB,CAA0BC,GAAG,KAAK;AAC3DA,QAAAA,GAD2D;AAE3DC,QAAAA,KAAK,EAAG,6BAA4BD,GAAI;AAFmB,OAAL,CAA7B,CAA3B;AAIAR,MAAAA,YAAY,CAACI,kBAAD,CAAZ;AACD;AACF,GAbQ,EAaN,CAACR,QAAD,CAbM,CAAT,CANqC,CAqBrC;;AACA,QAAMc,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,aAAtB,CAAoCC,KAAlD,CAF8B,CAI9B;;AACAnB,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACE,SAAS,CAACE,eAAD,CAAT,CAA2BO,GAA5B,GAAkCK;AAFxB,KAAD,CAAX,CAL8B,CAU9B;;AACAX,IAAAA,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;AACD,GAZD;;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,eAAe,GAAGF,SAAS,CAACmB,MAA5B,GACC;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQX,SAAS,CAACE,eAAD,CAAT,CAA2BQ,KAAnC,CADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,eAFP;AAGE,IAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADD,GAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMU,IAAI,CAACC,SAAL,CAAevB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAN,CAFF,CAZJ,CADF;AAoBD,CAxDD,C,CA0DA;;;AACA,MAAMwB,MAAM,GAAG,MAAM;AACnB,QAAMC,UAAU,GAAG;AACjBC,IAAAA,GAAG,EAAE,EADY;AAEjBC,IAAAA,GAAG,EAAE,EAFY;AAGjBC,IAAAA,KAAK,EAAE;AACH,eAAS,EADN;AAEH,eAAS;AAFN;AAHU,GAAnB;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEH,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAhBD;;AAkBA,eAAeD,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst QuestionForm = ({ jsonFile }) => {\n  const [formData, setFormData] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  // Load the JSON file and frame questions based on keys\n  useEffect(() => {\n    if (jsonFile) {\n      // Initialize formData with keys from jsonFile\n      const initialData = { ...jsonFile };\n      setFormData(initialData);\n\n      // Generate questions from jsonFile keys\n      const generatedQuestions = Object.keys(jsonFile).map(key => ({\n        key,\n        label: `Please enter a value for '${key}':`\n      }));\n      setQuestions(generatedQuestions);\n    }\n  }, [jsonFile]);\n\n  // Function to handle the form submission and move to the next question\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const input = event.target.elements.questionInput.value;\n\n    // Update the form data\n    setFormData({\n      ...formData,\n      [questions[currentQuestion].key]: input\n    });\n\n    // Move to the next question\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  return (\n    <div>\n      {currentQuestion < questions.length ? (\n        <form onSubmit={handleSubmit}>\n          <label>{questions[currentQuestion].label}</label>\n          <input\n            type=\"text\"\n            name=\"questionInput\"\n            required\n          />\n          <button type=\"submit\">Next</button>\n        </form>\n      ) : (\n        <div>\n          <h3>Thank you! Here is the filled JSON:</h3>\n          <pre>{JSON.stringify(formData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Usage of QuestionForm with a sample JSON file\nconst Sample = () => {\n  const sampleJson = {\n    one: \"\",\n    two: \"\",\n    three: {\n        \"t-one\": \"\",\n        \"t-two\": \"\"\n    }\n  };\n\n  return (\n    <div>\n      <h1>Dynamic JSON Questionnaire</h1>\n      <QuestionForm jsonFile={sampleJson} />\n    </div>\n  );\n};\n\nexport default Sample;\n"]},"metadata":{},"sourceType":"module"}