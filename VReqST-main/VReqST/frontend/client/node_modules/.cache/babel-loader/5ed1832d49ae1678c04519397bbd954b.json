{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Project/ChatPage.jsx\";\nimport { Box, Flex, Heading, Input, Spinner, Tab, Tabs, TabList, TabPanel, TabPanels, Text, useToast } from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport GuidedTour from \"./GuidedTour\";\n\nconst scenefile = require(\"../default/scene.txt\");\n\nconst assetfile = require(\"../default/asset.txt\");\n\nconst actionfile = require(\"../default/action.txt\");\n\nconst timelinefile = require(\"../default/timeline.txt\");\n\nconst ChatPage = () => {\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState('');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(true);\n  const toast = useToast();\n  const {\n    projectid\n  } = useParams();\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [curridx, setCurrIdx] = useState(0);\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n\n  const getProject = async () => {\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get(backend + `/api/project/${projectid}`, requestOptions);\n      setcurrProject(res.data); // console.log(res.data.scene);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  }; // const questions = [\n  //   { text: 'Please enter the project name', validation: (input) => input === currProject },\n  //   { text: 'Please enter a number', validation: (input) => !isNaN(input) && Number(input) > 0 },\n  //   { text: 'Please enter Yes or No', validation: (input) => input === \"Yes\" || input === \"No\" },\n  //   { text: 'Please enter any string', validation: (input) => input.trim().length > 0 }\n  // ]\n\n\n  const chatRef = useRef(null);\n\n  const getTabColor = index => {\n    if (index < tabIndex) {\n      return 'green.200';\n    } else if (index === tabIndex) {\n      return 'blue.200';\n    } else {\n      return 'gray.200';\n    }\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  const getValidation = type => {\n    switch (type) {\n      case 'string':\n        return input => input.trim().length > 0;\n\n      case 'number':\n        return input => !isNaN(input);\n\n      case 'boolean':\n        return input => input === 'Yes' | input === 'No';\n      // can add other validations here\n\n      default:\n        return () => true;\n    }\n  };\n\n  const fetchQuestions = async () => {\n    // now fetching the default files, need to change the path later\n    try {\n      const response = await fetch(scenefile);\n      const data = await response.json();\n      let ques = [];\n      Object.entries(data).forEach(([key, value]) => {\n        if (value.typeof !== 'object') {\n          ques.push({\n            text: `Please enter ${value.query}`,\n            validation: getValidation(value.typeof),\n            key: key\n          });\n        } else {\n          ques.push({\n            text: `How many ${value.query} are there?`,\n            validation: input => !isNaN(input) && Number(input) > 0,\n            key: key,\n            isObject: true,\n            numQuestions: value.num,\n            objectQuestions: []\n          });\n          const objectKeys = Object.keys(data).slice(ques.length, ques.length + value.num);\n          const objectQuestions = objectKeys.map(objKey => ({\n            text: `Please enter ${data[objKey].query}`,\n            validation: getValidation(data[objKey].typeof),\n            key: objKey\n          }));\n          ques[ques.length - 1].objectQuestions = objectQuestions;\n        }\n      });\n      setQuestions(ques);\n      setChatHistory([{\n        text: ques[0].text,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n\n  const handleSend = () => {\n    console.log(answer);\n\n    if (answer.trim() !== '' && curridx < questions.length) {\n      const question = questions[curridx];\n      setChatHistory([...chatHistory, {\n        text: answer,\n        sender: 'user'\n      }]);\n\n      if (question.validation(answer)) {\n        if (question.isObject && !question.isRepeating) {\n          const numRepeats = parseInt(answer);\n          question.isRepeating = true;\n          question.repeatCount = 0;\n          question.totalRepeats = numRepeats;\n        } else if (question.isObject && question.isRepeating) {\n          const objQuestions = question.objectQuestions;\n\n          if (question.repeatCount < question.totalRepeats) {\n            const nextObjQuestion = objQuestions[question.repeatCount % objQuestions.length];\n            setChatHistory([...chatHistory, {\n              text: nextObjQuestion.text,\n              sender: 'bot'\n            }]);\n            question.repeatCount += 1;\n\n            if (question.repeatCount === question.totalRepeats * objQuestions.length) {\n              setCurrIdx(curridx + 1);\n            }\n          }\n        }\n\n        setCurrIdx(curridx + 1);\n        console.log(answer);\n\n        if (curridx < questions.length - 1) {\n          setChatHistory(prevHistory => [...prevHistory, {\n            text: questions[curridx + 1].text,\n            sender: 'bot'\n          }]);\n        } else {\n          setChatHistory(prevHistory => [...prevHistory, {\n            text: 'Thank you for providing all the information!',\n            sender: 'bot'\n          }]);\n        }\n      } else {\n        setChatHistory(prevHistory => [...prevHistory, {\n          text: React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, React.createElement(Text, {\n            as: \"span\",\n            color: \"red.500\",\n            fontWeight: \"bold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, \"Invalid input!\"), ' ', question.text),\n          sender: 'bot'\n        }]);\n      }\n\n      setAnswer('');\n    }\n  };\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await getProject(); // fetch the owner from project id\n\n        setOwner('Amogha');\n        await fetchQuestions();\n        setLoading(false); // setChatHistory([...chatHistory, { text: 'Please enter the project name', sender: 'bot' }]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    initialize();\n  }, []);\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n  const tourSteps = [{\n    target: '.all-steps',\n    content: 'This indicates the current step'\n  }, {\n    target: '.chat-history',\n    content: 'This area displays chat history between you and VReqST'\n  }, {\n    target: '.user-input',\n    content: 'Reply to each query by typing your answer here'\n  }, {\n    target: '.all-steps',\n    content: 'You can go back to any step to edit the answers'\n  }];\n  {\n    return loading === true || currProject === null ? React.createElement(React.Fragment, null, React.createElement(Flex, {\n      width: \"80vw\",\n      height: \"85vh\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      thickness: \"4px\",\n      speed: \"0.65s\",\n      emptyColor: \"gray.200\",\n      color: \"blue.500\",\n      size: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }))) : React.createElement(Flex, {\n      direction: \"column\",\n      h: \"100vh\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Heading, {\n      fontSize: {\n        base: \"3xl\"\n      },\n      pt: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Text, {\n      as: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, getGreeting(), \",\", \" \"), React.createElement(Text, {\n      as: \"span\",\n      color: \"blue.400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, owner)), React.createElement(Tabs, {\n      isFitted: true,\n      w: \"80%\",\n      mt: \"4\",\n      variant: \"soft-rounded\",\n      index: tabIndex,\n      onChange: index => setTabIndex(index) // isDisabled={isTourOpen}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      className: \"all-steps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, ['Scene', 'Article', 'Action-Response', 'Behaviour', 'Timeline'].map((label, index) => React.createElement(Tab, {\n      key: index,\n      bg: getTabColor(index),\n      _selected: {\n        bg: getTabColor(index)\n      },\n      isDisabled: isTourOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, label))), React.createElement(TabPanels, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      direction: \"column\",\n      w: \"100%\",\n      bg: \"gray.200\",\n      p: \"4\",\n      borderRadius: \"md\",\n      overflowY: \"auto\",\n      height: \"65vh\",\n      mb: \"4\",\n      ref: chatRef,\n      className: \"chat-history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, chatHistory.map((chat, index) => React.createElement(Box, {\n      key: index,\n      alignSelf: chat.sender === 'user' ? 'flex-end' : 'flex-start',\n      bg: chat.sender === 'user' ? 'blue.100' : 'gray.300',\n      color: chat.sender === 'user' ? 'black' : 'black',\n      borderRadius: \"md\",\n      p: \"2\",\n      mb: \"2\",\n      maxWidth: \"60%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, chat.text)))), React.createElement(Flex, {\n      w: \"100%\",\n      bg: \"gray.200\",\n      borderRadius: \"md\",\n      className: \"user-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: answer,\n      onChange: e => setAnswer(e.target.value),\n      placeholder: \"Reply to VReqST...\",\n      onKeyDown: e => {\n        if (e.key == 'Enter') handleSend();\n      },\n      isDisabled: isTourOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }))), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Article goes here\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Action Response goes here\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Behaviour goes here\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Timeline goes here\")))), React.createElement(GuidedTour, {\n      steps: tourSteps,\n      isOpen: isTourOpen,\n      onClose: () => setIsTourOpen(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Project/ChatPage.jsx"],"names":["Box","Flex","Heading","Input","Spinner","Tab","Tabs","TabList","TabPanel","TabPanels","Text","useToast","Axios","React","useEffect","useState","useRef","Link","useParams","backend","GuidedTour","scenefile","require","assetfile","actionfile","timelinefile","ChatPage","currProject","setcurrProject","loading","setLoading","owner","setOwner","tabIndex","setTabIndex","isTourOpen","setIsTourOpen","toast","projectid","answer","setAnswer","questions","setQuestions","chatHistory","setChatHistory","curridx","setCurrIdx","jwttoken","localStorage","getItem","getProject","requestOptions","headers","token","res","get","data","error","title","status","duration","isClosable","position","console","log","chatRef","getTabColor","index","getGreeting","currentHour","Date","getHours","getValidation","type","input","trim","length","isNaN","fetchQuestions","response","fetch","json","ques","Object","entries","forEach","key","value","typeof","push","text","query","validation","Number","isObject","numQuestions","num","objectQuestions","objectKeys","keys","slice","map","objKey","sender","handleSend","question","isRepeating","numRepeats","parseInt","repeatCount","totalRepeats","objQuestions","nextObjQuestion","prevHistory","initialize","err","current","scrollTop","scrollHeight","tourSteps","target","content","base","label","bg","chat","e"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Heading,\n  Input,\n  Spinner,\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\n\nimport Axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport GuidedTour from \"./GuidedTour\";\n\nconst scenefile = require(\"../default/scene.txt\")\nconst assetfile = require(\"../default/asset.txt\")\nconst actionfile = require(\"../default/action.txt\")\nconst timelinefile = require(\"../default/timeline.txt\")\n\nconst ChatPage = () => {\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState('');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(true);\n  const toast = useToast();\n\n  const { projectid } = useParams();\n\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [curridx, setCurrIdx] = useState(0);\n\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  const getProject = async() => {\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        backend + `/api/project/${projectid}`,\n        requestOptions\n      );\n\n      setcurrProject(res.data);\n      // console.log(res.data.scene);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  }\n\n  // const questions = [\n  //   { text: 'Please enter the project name', validation: (input) => input === currProject },\n  //   { text: 'Please enter a number', validation: (input) => !isNaN(input) && Number(input) > 0 },\n  //   { text: 'Please enter Yes or No', validation: (input) => input === \"Yes\" || input === \"No\" },\n  //   { text: 'Please enter any string', validation: (input) => input.trim().length > 0 }\n  // ]\n\n  const chatRef = useRef(null);\n\n  const getTabColor = (index) => {\n    if (index < tabIndex) {\n      return 'green.200';\n    } else if (index === tabIndex) {\n      return 'blue.200';\n    } else {\n      return 'gray.200';\n    }\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  const getValidation = (type) => {\n    switch (type) {\n      case 'string':\n        return (input) => input.trim().length > 0;\n      case 'number':\n        return (input) => !isNaN(input);\n      case 'boolean':\n        return (input) => input==='Yes' | input==='No';\n      // can add other validations here\n      default:\n        return () => true;\n    }\n  };\n\n  const fetchQuestions = async () => {\n    // now fetching the default files, need to change the path later\n    try {\n      const response = await fetch(scenefile);\n      const data = await response.json();\n      let ques = [];\n\n      Object.entries(data).forEach(([key, value]) => {\n        if (value.typeof !== 'object') {\n          ques.push({\n            text: `Please enter ${value.query}`,\n            validation: getValidation(value.typeof),\n            key: key,\n          });\n        } else {\n          ques.push({\n            text: `How many ${value.query} are there?`,\n            validation: (input) => !isNaN(input) && Number(input) > 0,\n            key: key,\n            isObject: true,\n            numQuestions: value.num,\n            objectQuestions: [],\n          });\n\n          const objectKeys = Object.keys(data).slice(ques.length, ques.length + value.num);\n          const objectQuestions = objectKeys.map((objKey) => ({\n            text: `Please enter ${data[objKey].query}`,\n            validation: getValidation(data[objKey].typeof),\n            key: objKey,\n          }));\n\n          ques[ques.length - 1].objectQuestions = objectQuestions;\n        }\n      })\n\n      setQuestions(ques);\n      setChatHistory([{ text: ques[0].text, sender: 'bot' }]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  }\n\n  const handleSend = () => {\n    console.log(answer);\n    if (answer.trim() !== '' && curridx < questions.length) {\n      const question = questions[curridx];\n      setChatHistory([...chatHistory, { text: answer, sender: 'user' }]);\n\n      if (question.validation(answer)) {\n        if (question.isObject && !question.isRepeating) {\n          const numRepeats = parseInt(answer);\n          question.isRepeating = true;\n          question.repeatCount = 0;\n          question.totalRepeats = numRepeats;\n        } else if (question.isObject && question.isRepeating) {\n          const objQuestions = question.objectQuestions;\n\n          if (question.repeatCount < question.totalRepeats) {\n            const nextObjQuestion = objQuestions[question.repeatCount % objQuestions.length];\n            setChatHistory([...chatHistory, { text: nextObjQuestion.text, sender: 'bot' }]);\n            question.repeatCount += 1;\n\n            if (question.repeatCount === question.totalRepeats*objQuestions.length) {\n              setCurrIdx(curridx+1)\n            }\n          }\n        }\n        setCurrIdx(curridx+1);\n        console.log(answer);\n        if (curridx < questions.length-1) {\n          setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { text: questions[curridx+1].text, sender: 'bot' }\n          ]);\n        } else {\n          setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { text: 'Thank you for providing all the information!', sender: 'bot' },\n          ]);\n        }\n      } else {\n        setChatHistory((prevHistory) => [\n          ...prevHistory,\n          { \n            text: (\n              <Text>\n                <Text as=\"span\" color=\"red.500\" fontWeight=\"bold\">\n                  Invalid input!\n                </Text>{' '}\n                {question.text}\n              </Text>\n            ),\n            sender: 'bot'\n          },\n        ]);\n      }\n      setAnswer('');\n    }\n  }\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await getProject();\n        // fetch the owner from project id\n        setOwner('Amogha');\n        await fetchQuestions();\n        setLoading(false);\n        // setChatHistory([...chatHistory, { text: 'Please enter the project name', sender: 'bot' }]);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    initialize();\n  }, []);\n\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n\n  const tourSteps = [\n    {\n      target: '.all-steps',\n      content: 'This indicates the current step',\n    },\n    {\n      target: '.chat-history',\n      content: 'This area displays chat history between you and VReqST',\n    },\n    {\n      target: '.user-input',\n      content: 'Reply to each query by typing your answer here',\n    },\n    {\n      target: '.all-steps',\n      content: 'You can go back to any step to edit the answers',\n    },\n  ];\n\n  {\n    return loading === true || currProject === null ? (\n      <>\n        <Flex\n          width={\"80vw\"}\n          height={\"85vh\"}\n          justifyContent=\"center\"\n          alignItems={\"center\"}\n        >\n          <Spinner\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        </Flex>\n      </>\n    ) : (\n      <Flex direction=\"column\" h=\"100vh\" justifyContent=\"flex-start\" alignItems=\"center\">\n        <Heading fontSize={{ base: \"3xl\" }} pt=\"2\">\n          <Text as={\"span\"}>\n            {getGreeting()},{\" \"}\n          </Text>\n          <Text as={\"span\"} color={\"blue.400\"}>\n            {owner}\n          </Text>\n        </Heading>\n        <Tabs\n          isFitted w=\"80%\" mt=\"4\"\n          variant=\"soft-rounded\"\n          index={tabIndex}\n          onChange={(index) => setTabIndex(index)}\n          // isDisabled={isTourOpen}\n        >\n          <TabList className=\"all-steps\">\n            {['Scene', 'Article', 'Action-Response', 'Behaviour', 'Timeline'].map((label, index) => (\n              <Tab\n                key={index}\n                bg={getTabColor(index)}\n                _selected={{ bg: getTabColor(index) }}\n                isDisabled={isTourOpen}\n              >\n                {label}\n              </Tab>\n            ))}\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Flex\n                direction=\"column\"\n                w=\"100%\"\n                bg=\"gray.200\"\n                p=\"4\"\n                borderRadius=\"md\"\n                overflowY=\"auto\"\n                height=\"65vh\"\n                mb=\"4\"\n                ref={chatRef}\n                className=\"chat-history\"\n              >\n                {chatHistory.map((chat, index) => (\n                  <Box\n                    key={index}\n                    alignSelf={chat.sender === 'user' ? 'flex-end' : 'flex-start'}\n                    bg={chat.sender === 'user' ? 'blue.100' : 'gray.300'}\n                    color={chat.sender === 'user' ? 'black' : 'black'}\n                    borderRadius=\"md\"\n                    p=\"2\"\n                    mb=\"2\"\n                    maxWidth=\"60%\"\n                  >\n                    <Text>{chat.text}</Text>\n                  </Box>\n                ))}\n              </Flex>\n              <Flex\n                w=\"100%\"\n                bg=\"gray.200\"\n                borderRadius=\"md\"\n                className=\"user-input\"\n              >\n                <Input\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  placeholder=\"Reply to VReqST...\"\n                  onKeyDown={(e) => {\n                    if (e.key == 'Enter') handleSend();\n                  }}\n                  isDisabled={isTourOpen}\n                />\n              </Flex>\n            </TabPanel>\n            <TabPanel>\n              <Text>Article goes here</Text>\n            </TabPanel>\n            <TabPanel>\n              <Text>Action Response goes here</Text>\n            </TabPanel>\n            <TabPanel>\n              <Text>Behaviour goes here</Text>\n            </TabPanel>\n            <TabPanel>\n              <Text>Timeline goes here</Text>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n        <GuidedTour\n          steps={tourSteps}\n          isOpen={isTourOpen}\n          onClose={() => setIsTourOpen(false)}\n        />\n      </Flex>\n    )\n  }\n};\n\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}