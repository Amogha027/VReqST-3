{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Project/ChatPage.jsx\";\nimport { Box, Flex, Heading, Input, Spinner, Tab, Tabs, TabList, TabPanel, TabPanels, Text, useToast } from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport GuidedTour from \"./GuidedTour\";\nimport Stack from \"./Stack\";\n\nconst scenefile = require(\"../default/lol.json\");\n\nconst scenevalidator = require(\"../default/lol-validator.json\"); // const assetfile = require(\"../default/asset.txt\")\n// const actionfile = require(\"../default/action.txt\")\n// const timelinefile = require(\"../default/timeline.txt\")\n\n\nconst flattenJson = (data, parentKey = '') => {\n  let flattened = {};\n  Object.keys(data).forEach(key => {\n    const newKey = parentKey ? `${parentKey}.${key}` : key;\n\n    if (typeof data[key] === 'object' && !Array.isArray(data[key])) {\n      Object.assign(flattened, flattenJson(data[key], newKey));\n    } else {\n      flattened[newKey] = data[key];\n    }\n  });\n  return flattened;\n};\n\nconst unflattenJson = data => {\n  const result = {};\n  Object.keys(data).forEach(key => {\n    const keys = key.split('.');\n    keys.reduce((acc, value, index) => {\n      if (index === keys.length - 1) {\n        acc[value] = data[key];\n      } else {\n        if (!acc[value]) {\n          acc[value] = {};\n        }\n      }\n\n      return acc[value];\n    }, result);\n  });\n  return result;\n};\n\nconst ChatPage = () => {\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState('');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(true);\n  const [stack] = useState(new Stack());\n  const toast = useToast();\n  const {\n    projectid\n  } = useParams();\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [curridx, setCurrIdx] = useState(0);\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n\n  const getProject = async () => {\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get(backend + `/api/project/${projectid}`, requestOptions);\n      setcurrProject(res.data); // console.log(res.data.scene);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  }; // const questions = [\n  //   { text: 'Please enter the project name', validation: (input) => input === currProject },\n  //   { text: 'Please enter a number', validation: (input) => !isNaN(input) && Number(input) > 0 },\n  //   { text: 'Please enter Yes or No', validation: (input) => input === \"Yes\" || input === \"No\" },\n  //   { text: 'Please enter any string', validation: (input) => input.trim().length > 0 }\n  // ]\n\n\n  const chatRef = useRef(null);\n\n  const getTabColor = index => {\n    if (index < tabIndex) {\n      return 'green.200';\n    } else if (index === tabIndex) {\n      return 'blue.200';\n    } else {\n      return 'gray.200';\n    }\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  const getValidation = type => {\n    switch (type) {\n      case 'string':\n        return input => input.trim().length > 0;\n\n      case 'number':\n        return input => !isNaN(input);\n\n      case 'boolean':\n        return input => input === 'Yes' | input === 'No';\n      // can add other validations here\n\n      default:\n        return () => true;\n    }\n  };\n\n  const fetchQuestions = async () => {\n    // now fetching the default files, need to change the path later\n    try {\n      // const flattenedJson = flattenJson(scenefile);\n      // setFormData(flattenedJson);\n      // console.log(flattenedJson)\n      const response = await fetch(scenefile);\n      const data = await response.json();\n      const ques = Object.keys(flattenedJson).map(key => {\n        const value = key.split('.').pop();\n        const validator = scenevalidator[value];\n        const query = (validator === null || validator === void 0 ? void 0 : validator.query) || key;\n        const type = (validator === null || validator === void 0 ? void 0 : validator.typeof) || 'string';\n\n        if (type === 'object') {\n          return {\n            key,\n            text: `Please enter ${query}`,\n            typeof: type,\n            validation: getValidation(type),\n            num: validator === null || validator === void 0 ? void 0 : validator.num\n          };\n        } else {\n          return {\n            key,\n            text: `How many ${query} are there`,\n            validation: getValidation(type),\n            typeof: type\n          };\n        }\n      });\n      console.log(ques);\n      setQuestions(ques);\n      setCurrIdx(0);\n\n      if (ques[0].typeof !== \"object\") {\n        stack.push(0, ques.length - 1, 0, 1);\n      }\n\n      setChatHistory([{\n        text: ques[0].text,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n\n  const handleSend = () => {\n    console.log(answer);\n\n    if (answer.trim() !== '' && curridx < questions.length) {\n      const question = questions[curridx];\n      setChatHistory([...chatHistory, {\n        text: answer,\n        sender: 'user'\n      }]);\n\n      if (question.validation(answer)) {\n        let ci = curridx; // process the answer\n\n        if (question.typeof === \"object\") {\n          let key = question.key;\n          let arr = [];\n          let num = parseInt(answer);\n          stack.push(ci + 1, ci + question.num, 0, num);\n\n          for (let i = 0; i < num; i++) {\n            arr.push(formData[key][0]);\n          }\n\n          let temp = formData;\n          temp[key] = arr;\n          setFormData(temp);\n          ci = ci + 1;\n        } else {\n          // do\n          setFormData({ ...formData,\n            [question.key]: answer\n          });\n          ci = ci + 1;\n        }\n\n        setCurrIdx(ci);\n\n        if (ci < questions.length) {\n          setChatHistory(prevHistory => [...prevHistory, {\n            text: questions[ci].text,\n            sender: 'bot'\n          }]);\n        } else {\n          console.log(JSON.stringify(unflattenJson(formData), null, 2));\n          setChatHistory(prevHistory => [...prevHistory, {\n            text: 'Thank you for providing all the information!',\n            sender: 'bot'\n          }]);\n        }\n      } else {\n        setChatHistory(prevHistory => [...prevHistory, {\n          text: React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }, React.createElement(Text, {\n            as: \"span\",\n            color: \"red.500\",\n            fontWeight: \"bold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, \"Invalid input!\"), ' ', question.text),\n          sender: 'bot'\n        }]);\n      }\n\n      setAnswer('');\n    }\n  };\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await getProject(); // fetch the owner from project id\n\n        setOwner('Amogha');\n        await fetchQuestions();\n        setLoading(false); // setChatHistory([...chatHistory, { text: 'Please enter the project name', sender: 'bot' }]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    initialize();\n  }, []);\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n  const tourSteps = [{\n    target: '.all-steps',\n    content: 'This indicates the current step'\n  }, {\n    target: '.chat-history',\n    content: 'This area displays chat history between you and VReqST'\n  }, {\n    target: '.user-input',\n    content: 'Reply to each query by typing your answer here'\n  }, {\n    target: '.all-steps',\n    content: 'You can go back to any step to edit the answers'\n  }];\n  return loading === true || currProject === null ? React.createElement(React.Fragment, null, React.createElement(Flex, {\n    width: \"80vw\",\n    height: \"85vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }))) : React.createElement(Flex, {\n    direction: \"column\",\n    h: \"100vh\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    fontSize: {\n      base: \"3xl\"\n    },\n    pt: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(Text, {\n    as: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, getGreeting(), \",\", \" \"), React.createElement(Text, {\n    as: \"span\",\n    color: \"blue.400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, owner)), React.createElement(Tabs, {\n    isFitted: true,\n    w: \"80%\",\n    mt: \"4\",\n    variant: \"soft-rounded\",\n    index: tabIndex,\n    onChange: index => setTabIndex(index) // isDisabled={isTourOpen}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(TabList, {\n    className: \"all-steps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, ['Scene', 'Article', 'Action-Response', 'Behaviour', 'Timeline'].map((label, index) => React.createElement(Tab, {\n    key: index,\n    bg: getTabColor(index),\n    _selected: {\n      bg: getTabColor(index)\n    },\n    isDisabled: isTourOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, label))), React.createElement(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    direction: \"column\",\n    w: \"100%\",\n    bg: \"gray.200\",\n    p: \"4\",\n    borderRadius: \"md\",\n    overflowY: \"auto\",\n    height: \"65vh\",\n    mb: \"4\",\n    ref: chatRef,\n    className: \"chat-history\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, chatHistory.map((chat, index) => React.createElement(Box, {\n    key: index,\n    alignSelf: chat.sender === 'user' ? 'flex-end' : 'flex-start',\n    bg: chat.sender === 'user' ? 'blue.100' : 'gray.300',\n    color: chat.sender === 'user' ? 'black' : 'black',\n    borderRadius: \"md\",\n    p: \"2\",\n    mb: \"2\",\n    maxWidth: \"60%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, chat.text)))), React.createElement(Flex, {\n    w: \"100%\",\n    bg: \"gray.200\",\n    borderRadius: \"md\",\n    className: \"user-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: answer,\n    onChange: e => setAnswer(e.target.value),\n    placeholder: \"Reply to VReqST...\",\n    onKeyDown: e => {\n      if (e.key === 'Enter') handleSend();\n    },\n    isDisabled: isTourOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }))), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, \"Article goes here\")), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"Action Response goes here\")), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, \"Behaviour goes here\")), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }, \"Timeline goes here\")))), React.createElement(GuidedTour, {\n    steps: tourSteps,\n    isOpen: isTourOpen,\n    onClose: () => setIsTourOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }));\n};\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Project/ChatPage.jsx"],"names":["Box","Flex","Heading","Input","Spinner","Tab","Tabs","TabList","TabPanel","TabPanels","Text","useToast","Axios","React","useEffect","useState","useRef","useParams","backend","GuidedTour","Stack","scenefile","require","scenevalidator","flattenJson","data","parentKey","flattened","Object","keys","forEach","key","newKey","Array","isArray","assign","unflattenJson","result","split","reduce","acc","value","index","length","ChatPage","currProject","setcurrProject","loading","setLoading","owner","setOwner","tabIndex","setTabIndex","isTourOpen","setIsTourOpen","stack","toast","projectid","answer","setAnswer","questions","setQuestions","chatHistory","setChatHistory","formData","setFormData","curridx","setCurrIdx","jwttoken","localStorage","getItem","getProject","requestOptions","headers","token","res","get","error","title","status","duration","isClosable","position","console","log","chatRef","getTabColor","getGreeting","currentHour","Date","getHours","getValidation","type","input","trim","isNaN","fetchQuestions","response","fetch","json","ques","flattenedJson","map","pop","validator","query","typeof","text","validation","num","push","sender","handleSend","question","ci","arr","parseInt","i","temp","prevHistory","JSON","stringify","initialize","err","current","scrollTop","scrollHeight","tourSteps","target","content","base","label","bg","chat","e"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Heading,\n  Input,\n  Spinner,\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\n\nimport Axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport GuidedTour from \"./GuidedTour\";\nimport Stack from \"./Stack\"\n\nconst scenefile = require(\"../default/lol.json\")\nconst scenevalidator = require(\"../default/lol-validator.json\")\n// const assetfile = require(\"../default/asset.txt\")\n// const actionfile = require(\"../default/action.txt\")\n// const timelinefile = require(\"../default/timeline.txt\")\n\nconst flattenJson = (data, parentKey = '') => {\n  let flattened = {};\n  Object.keys(data).forEach(key => {\n    const newKey = parentKey ? `${parentKey}.${key}` : key;\n    if (typeof data[key] === 'object' && !Array.isArray(data[key])) {\n      Object.assign(flattened, flattenJson(data[key], newKey));\n    } else {\n      flattened[newKey] = data[key];\n    }\n  });\n  return flattened;\n};\n\nconst unflattenJson = (data) => {\n  const result = {};\n  Object.keys(data).forEach((key) => {\n    const keys = key.split('.');\n    keys.reduce((acc, value, index) => {\n      if (index === keys.length - 1) {\n        acc[value] = data[key];\n      } else {\n        if (!acc[value]) {\n          acc[value] = {};\n        }\n      }\n      return acc[value];\n    }, result);\n  });\n  return result;\n};\n\nconst ChatPage = () => {\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState('');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(true);\n  const [stack] = useState(new Stack());\n  const toast = useToast();\n\n  const { projectid } = useParams();\n\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n\n  const [formData, setFormData] = useState({});\n  const [curridx, setCurrIdx] = useState(0);\n\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  const getProject = async() => {\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        backend + `/api/project/${projectid}`,\n        requestOptions\n      );\n\n      setcurrProject(res.data);\n      // console.log(res.data.scene);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  }\n\n  // const questions = [\n  //   { text: 'Please enter the project name', validation: (input) => input === currProject },\n  //   { text: 'Please enter a number', validation: (input) => !isNaN(input) && Number(input) > 0 },\n  //   { text: 'Please enter Yes or No', validation: (input) => input === \"Yes\" || input === \"No\" },\n  //   { text: 'Please enter any string', validation: (input) => input.trim().length > 0 }\n  // ]\n\n  const chatRef = useRef(null);\n\n  const getTabColor = (index) => {\n    if (index < tabIndex) {\n      return 'green.200';\n    } else if (index === tabIndex) {\n      return 'blue.200';\n    } else {\n      return 'gray.200';\n    }\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  const getValidation = (type) => {\n    switch (type) {\n      case 'string':\n        return (input) => input.trim().length > 0;\n      case 'number':\n        return (input) => !isNaN(input);\n      case 'boolean':\n        return (input) => input==='Yes' | input==='No';\n      // can add other validations here\n      default:\n        return () => true;\n    }\n  };\n\n  const fetchQuestions = async () => {\n    // now fetching the default files, need to change the path later\n    try {\n      // const flattenedJson = flattenJson(scenefile);\n      // setFormData(flattenedJson);\n      // console.log(flattenedJson)\n\n      const response = await fetch(scenefile);\n      const data = await response.json();\n\n      const ques = Object.keys(flattenedJson).map(key => {\n        const value = key.split('.').pop()\n        const validator = scenevalidator[value];\n        const query = validator?.query || key;\n        const type = validator?.typeof || 'string';\n      \n        if (type === 'object') {\n          return {\n            key,\n            text: `Please enter ${query}`,\n            typeof: type,\n            validation: getValidation(type),\n            num: validator?.num\n          }\n        } else {\n          return {\n            key,\n            text: `How many ${query} are there`,\n            validation: getValidation(type),\n            typeof: type,\n          }\n        }\n      });\n\n      console.log(ques)\n      setQuestions(ques);\n      setCurrIdx(0);\n      if (ques[0].typeof !== \"object\") {\n        stack.push(0, ques.length-1, 0, 1);\n      }\n      setChatHistory([{ text: ques[0].text, sender: 'bot' }]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  }\n\n  const handleSend = () => {\n    console.log(answer)\n    if (answer.trim() !== '' && curridx < questions.length) {\n      const question = questions[curridx];\n      setChatHistory([...chatHistory, { text: answer, sender: 'user' }]);\n\n      if (question.validation(answer)) {\n        let ci = curridx;\n        // process the answer\n        if (question.typeof === \"object\") {\n          let key = question.key;\n          let arr = [];\n          let num = parseInt(answer);\n          stack.push(ci+1, ci+question.num, 0, num);\n          for (let i=0; i<num; i++) {\n            arr.push(formData[key][0]);\n          }\n          let temp = formData;\n          temp[key] = arr;\n          setFormData(temp);\n          ci = ci+1;\n        } else {\n          // do\n          setFormData({\n            ...formData,\n            [question.key]: answer\n          });\n          ci = ci+1;\n        }\n        setCurrIdx(ci);\n        if (ci < questions.length) {\n          setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { text: questions[ci].text, sender: 'bot' }\n          ]);\n        } else {\n          console.log(JSON.stringify(unflattenJson(formData), null, 2))\n          setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { text: 'Thank you for providing all the information!', sender: 'bot' },\n          ]);\n        }\n      } else {\n        setChatHistory((prevHistory) => [\n          ...prevHistory,\n          { \n            text: (\n              <Text>\n                <Text as=\"span\" color=\"red.500\" fontWeight=\"bold\">\n                  Invalid input!\n                </Text>{' '}\n                {question.text}\n              </Text>\n            ),\n            sender: 'bot'\n          },\n        ]);\n      }\n      setAnswer('');\n    }\n  }\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await getProject();\n        // fetch the owner from project id\n        setOwner('Amogha');\n        await fetchQuestions();\n        setLoading(false);\n        // setChatHistory([...chatHistory, { text: 'Please enter the project name', sender: 'bot' }]);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    initialize();\n  }, []);\n\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n\n  const tourSteps = [\n    {\n      target: '.all-steps',\n      content: 'This indicates the current step',\n    },\n    {\n      target: '.chat-history',\n      content: 'This area displays chat history between you and VReqST',\n    },\n    {\n      target: '.user-input',\n      content: 'Reply to each query by typing your answer here',\n    },\n    {\n      target: '.all-steps',\n      content: 'You can go back to any step to edit the answers',\n    },\n  ];\n\n  return loading === true || currProject === null ? (\n    <>\n      <Flex\n        width={\"80vw\"}\n        height={\"85vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <Flex direction=\"column\" h=\"100vh\" justifyContent=\"flex-start\" alignItems=\"center\">\n      <Heading fontSize={{ base: \"3xl\" }} pt=\"2\">\n        <Text as={\"span\"}>\n          {getGreeting()},{\" \"}\n        </Text>\n        <Text as={\"span\"} color={\"blue.400\"}>\n          {owner}\n        </Text>\n      </Heading>\n      <Tabs\n        isFitted w=\"80%\" mt=\"4\"\n        variant=\"soft-rounded\"\n        index={tabIndex}\n        onChange={(index) => setTabIndex(index)}\n        // isDisabled={isTourOpen}\n      >\n        <TabList className=\"all-steps\">\n          {['Scene', 'Article', 'Action-Response', 'Behaviour', 'Timeline'].map((label, index) => (\n            <Tab\n              key={index}\n              bg={getTabColor(index)}\n              _selected={{ bg: getTabColor(index) }}\n              isDisabled={isTourOpen}\n            >\n              {label}\n            </Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Flex\n              direction=\"column\"\n              w=\"100%\"\n              bg=\"gray.200\"\n              p=\"4\"\n              borderRadius=\"md\"\n              overflowY=\"auto\"\n              height=\"65vh\"\n              mb=\"4\"\n              ref={chatRef}\n              className=\"chat-history\"\n            >\n              {chatHistory.map((chat, index) => (\n                <Box\n                  key={index}\n                  alignSelf={chat.sender === 'user' ? 'flex-end' : 'flex-start'}\n                  bg={chat.sender === 'user' ? 'blue.100' : 'gray.300'}\n                  color={chat.sender === 'user' ? 'black' : 'black'}\n                  borderRadius=\"md\"\n                  p=\"2\"\n                  mb=\"2\"\n                  maxWidth=\"60%\"\n                >\n                  <Text>{chat.text}</Text>\n                </Box>\n              ))}\n            </Flex>\n            <Flex\n              w=\"100%\"\n              bg=\"gray.200\"\n              borderRadius=\"md\"\n              className=\"user-input\"\n            >\n              <Input\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Reply to VReqST...\"\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') handleSend();\n                }}\n                isDisabled={isTourOpen}\n              />\n            </Flex>\n          </TabPanel>\n          <TabPanel>\n            <Text>Article goes here</Text>\n          </TabPanel>\n          <TabPanel>\n            <Text>Action Response goes here</Text>\n          </TabPanel>\n          <TabPanel>\n            <Text>Behaviour goes here</Text>\n          </TabPanel>\n          <TabPanel>\n            <Text>Timeline goes here</Text>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n      <GuidedTour\n        steps={tourSteps}\n        isOpen={isTourOpen}\n        onClose={() => setIsTourOpen(false)}\n      />\n    </Flex>\n  )\n};\n\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}