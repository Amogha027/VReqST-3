{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Project/ChatPage.jsx\";\nimport { Box, Flex, Heading, Input, Spinner, Tab, Tabs, TabList, TabPanel, TabPanels, Text, useToast } from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport GuidedTour from \"./GuidedTour\";\nimport Stack from \"./Stack\";\n\nconst scenefile = require(\"../default/lol.json\");\n\nconst scenevalidator = require(\"../default/lol-validator.txt\");\n\nconst assetfile = require(\"../default/asset.txt\"); // const actionfile = require(\"../default/action.txt\")\n// const timelinefile = require(\"../default/timeline.txt\")\n\n\nconst flattenJson = (data, parentKey = '') => {\n  let flattened = {};\n  Object.keys(data).forEach(key => {\n    const newKey = parentKey ? `${parentKey}.${key}` : key;\n\n    if (typeof data[key] === 'object' && !Array.isArray(data[key])) {\n      Object.assign(flattened, flattenJson(data[key], newKey));\n    } else {\n      flattened[newKey] = data[key];\n    }\n  });\n  return flattened;\n};\n\nconst unflattenJson = data => {\n  const result = {};\n  Object.keys(data).forEach(key => {\n    const keys = key.split('.');\n    keys.reduce((acc, value, index) => {\n      if (index === keys.length - 1) {\n        acc[value] = data[key];\n      } else {\n        if (!acc[value]) {\n          acc[value] = {};\n        }\n      }\n\n      return acc[value];\n    }, result);\n  });\n  return result;\n};\n\nconst ChatPage = () => {\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState('');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(true);\n  const [stack] = useState(new Stack());\n  const toast = useToast();\n  const {\n    projectid\n  } = useParams();\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [parHistory, setParHistory] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [curridx, setCurrIdx] = useState(0);\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n\n  const getProject = async () => {\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get(backend + `/api/project/${projectid}`, requestOptions);\n      setcurrProject(res.data); // console.log(res.data.scene);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  }; // const questions = [\n  //   { text: 'Please enter the project name', validation: (input) => input === currProject },\n  //   { text: 'Please enter a number', validation: (input) => !isNaN(input) && Number(input) > 0 },\n  //   { text: 'Please enter Yes or No', validation: (input) => input === \"Yes\" || input === \"No\" },\n  //   { text: 'Please enter any string', validation: (input) => input.trim().length > 0 }\n  // ]\n\n\n  const chatRef = useRef(null);\n\n  const getTabColor = index => {\n    if (index < tabIndex) {\n      return 'green.200';\n    } else if (index === tabIndex) {\n      return 'blue.200';\n    } else {\n      return 'gray.200';\n    }\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  const getValidation = type => {\n    switch (type) {\n      case 'string':\n        return input => input.trim().length > 0;\n\n      case 'number':\n        return input => !isNaN(input);\n\n      case 'boolean':\n        return input => input === 'Yes' | input === 'No';\n      // can add other validations here\n\n      default:\n        return () => true;\n    }\n  };\n\n  const fetchQuestions = async () => {\n    // now fetching the default files, need to change the path later\n    try {\n      const flattenedJson = flattenJson(scenefile);\n      setFormData(flattenedJson);\n      console.log(flattenedJson);\n      const response = await fetch(scenevalidator);\n      const data = await response.json(); // console.log(data)\n\n      const ques = Object.entries(data).map(([key, value]) => {\n        if (value.typeof === \"object\") {\n          return {\n            key,\n            text: `How many ${value.query} are there?`,\n            typeof: value.typeof,\n            validation: getValidation(value.typeof),\n            num: value.num\n          };\n        } else {\n          return {\n            key,\n            text: `Please enter ${value.query}`,\n            validation: getValidation(value.typeof),\n            typeof: value.typeof\n          };\n        }\n      }); // console.log(ques)\n\n      setQuestions(ques);\n      setCurrIdx(0); // console.log(stack.peek())\n\n      if (ques[0].typeof !== \"object\") {\n        stack.push(0, ques.length - 1, 0, 1, []); // console.log(stack.peek())\n      }\n\n      setChatHistory([{\n        text: ques[0].text,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n\n  const handleSend = () => {\n    console.log(answer);\n    console.log(formData);\n\n    if (answer.trim() !== '' && curridx < questions.length) {\n      const question = questions[curridx];\n      setChatHistory([...chatHistory, {\n        text: answer,\n        sender: 'user'\n      }]);\n\n      if (question.validation(answer)) {\n        let ci = curridx;\n        let top = stack.peek();\n        const currData = Array.isArray(formData) ? [...formData] : { ...formData\n        };\n\n        if (question.typeof === \"object\") {\n          let key = question.key;\n          let arr = [];\n          let num = parseInt(answer);\n\n          if (stack.isEmpty()) {\n            stack.push(ci + 1, ci + question.num, 0, num, [key]);\n\n            for (let i = 0; i < num; i++) {\n              arr.push(currData[key][0]);\n            }\n\n            currData[key] = arr;\n          } else {\n            let parList = top.parKey;\n            parList.push(key);\n            stack.push(ci + 1, ci + question.num, 0, num, parList);\n            let temp = Array.isArray(currData) ? [...currData] : { ...currData\n            };\n            top.parKey.forEach((key, index) => {\n              temp[key] = Array.isArray(temp[key]) ? [...temp[key]] : { ...temp[key]\n              };\n\n              if (index === top.parKey.length - 1) {\n                temp[key][top.i] = Array.isArray(temp[key][top.i]) ? [...temp[key][top.i]] : { ...temp[key][top.i]\n                };\n              }\n\n              temp = Array.isArray(temp[key]) ? temp[key][0] : temp;\n            });\n\n            for (let i = 0; i < num; i++) {\n              arr.push([temp[0]]);\n            }\n\n            let finalObj = Array.isArray(currData) ? [...currData] : { ...currData\n            };\n            top.parKey.forEach((key, index) => {\n              finalObj[key] = Array.isArray(finalObj[key]) ? [...finalObj[key]] : { ...finalObj[key]\n              };\n\n              if (index === top.parKey.length - 1) {\n                finalObj[key][top.i] = arr;\n              } else {\n                finalObj = finalObj[key];\n              }\n            });\n          }\n\n          setFormData(currData);\n          top = stack.peek();\n        } else {\n          if (top.parKey.length === 0) {\n            setFormData({ ...formData,\n              [question.key]: answer\n            });\n          } else {\n            let temp = currData;\n\n            for (let i = 0; i < top.parKey.length; i++) {\n              temp[top.parKey[i]] = Array.isArray(temp[top.parKey[i]]) ? [...temp[top.parKey[i]]] : { ...temp[top.parKey[i]]\n              };\n              temp = temp[top.parKey[i]];\n            }\n\n            temp[top.i] = Array.isArray(temp[top.i]) ? [...temp[top.i]] : { ...temp[top.i]\n            };\n            let keys = question.key.split('.');\n\n            if (keys.length === 1) {\n              temp[top.i][question.key] = answer;\n            } else {\n              temp[top.i][keys[0]][keys[1]] = answer;\n            }\n\n            setFormData(currData);\n          }\n        }\n\n        console.log(currData);\n\n        if (ci === top.r) {\n          top.i++;\n          stack.pop();\n\n          if (top.i === top.total) {\n            ci = ci + 1;\n          } else {\n            ci = top.l;\n            stack.push(top.l, top.r, top.i, top.total, top.parKey);\n          }\n        } else {\n          ci = ci + 1;\n        }\n\n        setCurrIdx(ci);\n\n        if (ci < questions.length) {\n          setChatHistory(prevHistory => [...prevHistory, {\n            text: questions[ci].text,\n            sender: 'bot'\n          }]);\n        } else {\n          console.log(JSON.stringify(unflattenJson(currData), null, 2));\n          setChatHistory(prevHistory => [...prevHistory, {\n            text: 'Thank you for providing all the information!',\n            sender: 'bot'\n          }]);\n        }\n      } else {\n        setChatHistory(prevHistory => [...prevHistory, {\n          text: React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(Text, {\n            as: \"span\",\n            color: \"red.500\",\n            fontWeight: \"bold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }, \"Invalid input!\"), ' ', question.text),\n          sender: 'bot'\n        }]);\n      }\n\n      setAnswer('');\n    }\n  };\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await getProject(); // fetch the owner from project id\n\n        setOwner('Amogha');\n        await fetchQuestions();\n        setLoading(false); // setChatHistory([...chatHistory, { text: 'Please enter the project name', sender: 'bot' }]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    initialize();\n  }, []);\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n  const tourSteps = [{\n    target: '.all-steps',\n    content: 'This indicates the current step'\n  }, {\n    target: '.chat-history',\n    content: 'This area displays chat history between you and VReqST'\n  }, {\n    target: '.user-input',\n    content: 'Reply to each query by typing your answer here'\n  }, {\n    target: '.all-steps',\n    content: 'You can go back to any step to edit the answers'\n  }];\n  return loading === true || currProject === null ? React.createElement(React.Fragment, null, React.createElement(Flex, {\n    width: \"80vw\",\n    height: \"85vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }))) : React.createElement(Flex, {\n    direction: \"column\",\n    h: \"100vh\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    fontSize: {\n      base: \"3xl\"\n    },\n    pt: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(Text, {\n    as: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, getGreeting(), \",\", \" \"), React.createElement(Text, {\n    as: \"span\",\n    color: \"blue.400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, owner)), React.createElement(Tabs, {\n    isFitted: true,\n    w: \"80%\",\n    mt: \"4\",\n    variant: \"soft-rounded\",\n    index: tabIndex,\n    onChange: index => setTabIndex(index) // isDisabled={isTourOpen}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(TabList, {\n    className: \"all-steps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, ['Scene', 'Article', 'Action-Response', 'Behaviour', 'Timeline'].map((label, index) => React.createElement(Tab, {\n    key: index,\n    bg: getTabColor(index),\n    _selected: {\n      bg: getTabColor(index)\n    },\n    isDisabled: isTourOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, label))), React.createElement(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    direction: \"column\",\n    w: \"100%\",\n    bg: \"gray.200\",\n    p: \"4\",\n    borderRadius: \"md\",\n    overflowY: \"auto\",\n    height: \"65vh\",\n    mb: \"4\",\n    ref: chatRef,\n    className: \"chat-history\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, chatHistory.map((chat, index) => React.createElement(Box, {\n    key: index,\n    alignSelf: chat.sender === 'user' ? 'flex-end' : 'flex-start',\n    bg: chat.sender === 'user' ? 'blue.100' : 'gray.300',\n    color: chat.sender === 'user' ? 'black' : 'black',\n    borderRadius: \"md\",\n    p: \"2\",\n    mb: \"2\",\n    maxWidth: \"60%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, chat.text)))), React.createElement(Flex, {\n    w: \"100%\",\n    bg: \"gray.200\",\n    borderRadius: \"md\",\n    className: \"user-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: answer,\n    onChange: e => setAnswer(e.target.value),\n    placeholder: \"Reply to VReqST...\",\n    onKeyDown: e => {\n      if (e.key === 'Enter') handleSend();\n    },\n    isDisabled: isTourOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }))), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445\n    },\n    __self: this\n  }, \"Article goes here\")), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, \"Action Response goes here\")), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"Behaviour goes here\")), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, \"Timeline goes here\")))), React.createElement(GuidedTour, {\n    steps: tourSteps,\n    isOpen: isTourOpen,\n    onClose: () => setIsTourOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }));\n};\n\nexport default ChatPage;","map":{"version":3,"sources":["/home/amogha/btp-2/VReqST-2/VReqST-main/VReqST/frontend/client/src/Components/Project/ChatPage.jsx"],"names":["Box","Flex","Heading","Input","Spinner","Tab","Tabs","TabList","TabPanel","TabPanels","Text","useToast","Axios","React","useEffect","useState","useRef","useParams","backend","GuidedTour","Stack","scenefile","require","scenevalidator","assetfile","flattenJson","data","parentKey","flattened","Object","keys","forEach","key","newKey","Array","isArray","assign","unflattenJson","result","split","reduce","acc","value","index","length","ChatPage","currProject","setcurrProject","loading","setLoading","owner","setOwner","tabIndex","setTabIndex","isTourOpen","setIsTourOpen","stack","toast","projectid","answer","setAnswer","questions","setQuestions","chatHistory","setChatHistory","parHistory","setParHistory","formData","setFormData","curridx","setCurrIdx","jwttoken","localStorage","getItem","getProject","requestOptions","headers","token","res","get","error","title","status","duration","isClosable","position","console","log","chatRef","getTabColor","getGreeting","currentHour","Date","getHours","getValidation","type","input","trim","isNaN","fetchQuestions","flattenedJson","response","fetch","json","ques","entries","map","typeof","text","query","validation","num","push","sender","handleSend","question","ci","top","peek","currData","arr","parseInt","isEmpty","i","parList","parKey","temp","finalObj","r","pop","total","l","prevHistory","JSON","stringify","initialize","err","current","scrollTop","scrollHeight","tourSteps","target","content","base","label","bg","chat","e"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Flex,\n  Heading,\n  Input,\n  Spinner,\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\n\nimport Axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport GuidedTour from \"./GuidedTour\";\nimport Stack from \"./Stack\"\n\nconst scenefile = require(\"../default/lol.json\")\nconst scenevalidator = require(\"../default/lol-validator.txt\")\nconst assetfile = require(\"../default/asset.txt\")\n// const actionfile = require(\"../default/action.txt\")\n// const timelinefile = require(\"../default/timeline.txt\")\n\nconst flattenJson = (data, parentKey = '') => {\n  let flattened = {};\n  Object.keys(data).forEach(key => {\n    const newKey = parentKey ? `${parentKey}.${key}` : key;\n    if (typeof data[key] === 'object' && !Array.isArray(data[key])) {\n      Object.assign(flattened, flattenJson(data[key], newKey));\n    } else {\n      flattened[newKey] = data[key];\n    }\n  });\n  return flattened;\n};\n\nconst unflattenJson = (data) => {\n  const result = {};\n  Object.keys(data).forEach((key) => {\n    const keys = key.split('.');\n    keys.reduce((acc, value, index) => {\n      if (index === keys.length - 1) {\n        acc[value] = data[key];\n      } else {\n        if (!acc[value]) {\n          acc[value] = {};\n        }\n      }\n      return acc[value];\n    }, result);\n  });\n  return result;\n};\n\nconst ChatPage = () => {\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [owner, setOwner] = useState('');\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isTourOpen, setIsTourOpen] = useState(true);\n  const [stack] = useState(new Stack());\n  const toast = useToast();\n\n  const { projectid } = useParams();\n\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [parHistory, setParHistory] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [curridx, setCurrIdx] = useState(0);\n\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  const getProject = async() => {\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        backend + `/api/project/${projectid}`,\n        requestOptions\n      );\n\n      setcurrProject(res.data);\n      // console.log(res.data.scene);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  }\n\n  // const questions = [\n  //   { text: 'Please enter the project name', validation: (input) => input === currProject },\n  //   { text: 'Please enter a number', validation: (input) => !isNaN(input) && Number(input) > 0 },\n  //   { text: 'Please enter Yes or No', validation: (input) => input === \"Yes\" || input === \"No\" },\n  //   { text: 'Please enter any string', validation: (input) => input.trim().length > 0 }\n  // ]\n\n  const chatRef = useRef(null);\n\n  const getTabColor = (index) => {\n    if (index < tabIndex) {\n      return 'green.200';\n    } else if (index === tabIndex) {\n      return 'blue.200';\n    } else {\n      return 'gray.200';\n    }\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  const getValidation = (type) => {\n    switch (type) {\n      case 'string':\n        return (input) => input.trim().length > 0;\n      case 'number':\n        return (input) => !isNaN(input);\n      case 'boolean':\n        return (input) => input==='Yes' | input==='No';\n      // can add other validations here\n      default:\n        return () => true;\n    }\n  };\n\n  const fetchQuestions = async () => {\n    // now fetching the default files, need to change the path later\n    try {\n      const flattenedJson = flattenJson(scenefile);\n      setFormData(flattenedJson);\n      console.log(flattenedJson)\n\n      const response = await fetch(scenevalidator);\n      const data = await response.json();\n      // console.log(data)\n\n      const ques = Object.entries(data).map(([key, value]) => {\n        if (value.typeof === \"object\") {\n          return {\n            key,\n            text: `How many ${value.query} are there?`,\n            typeof: value.typeof,\n            validation: getValidation(value.typeof),\n            num: value.num\n          }\n        } else {\n          return {\n            key,\n            text: `Please enter ${value.query}`,\n            validation: getValidation(value.typeof),\n            typeof: value.typeof,\n          }\n        }\n      });\n\n      // console.log(ques)\n      setQuestions(ques);\n      setCurrIdx(0);\n      // console.log(stack.peek())\n      if (ques[0].typeof !== \"object\") {\n        stack.push(0, ques.length-1, 0, 1, []);\n        // console.log(stack.peek())\n      }\n      setChatHistory([{ text: ques[0].text, sender: 'bot' }]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  }\n\n  const handleSend = () => {\n    console.log(answer)\n    console.log(formData)\n    if (answer.trim() !== '' && curridx < questions.length) {\n      const question = questions[curridx];\n      setChatHistory([...chatHistory, { text: answer, sender: 'user' }]);\n\n      if (question.validation(answer)) {\n        let ci = curridx;\n        let top = stack.peek();\n        const currData = Array.isArray(formData) ? [...formData] : { ...formData };\n        if (question.typeof === \"object\") {\n          let key = question.key;\n          let arr = [];\n          let num = parseInt(answer);\n          if (stack.isEmpty()) {\n            stack.push(ci+1, ci+question.num, 0, num, [key]);\n            for (let i=0; i<num; i++) {\n              arr.push(currData[key][0]);\n            }\n            currData[key] = arr;\n          } else {\n            let parList = top.parKey;\n            parList.push(key);\n            stack.push(ci+1, ci+question.num, 0, num, parList);\n            let temp = Array.isArray(currData) ? [...currData] : { ...currData };\n            top.parKey.forEach((key, index) => {\n              temp[key] = Array.isArray(temp[key]) ? [...temp[key]] : { ...temp[key] };\n              if (index === top.parKey.length - 1) {\n                temp[key][top.i] = Array.isArray(temp[key][top.i]) ? [...temp[key][top.i]] : { ...temp[key][top.i] };\n              }\n              temp = Array.isArray(temp[key]) ? temp[key][0] : temp;\n            });\n            for (let i = 0; i < num; i++) {\n              arr.push([temp[0]]);\n            }\n            let finalObj = Array.isArray(currData) ? [...currData] : { ...currData };\n            top.parKey.forEach((key, index) => {\n              finalObj[key] = Array.isArray(finalObj[key]) ? [...finalObj[key]] : { ...finalObj[key] };\n\n              if (index === top.parKey.length - 1) {\n                finalObj[key][top.i] = arr;\n              } else {\n                finalObj = finalObj[key];\n              }\n            });\n          }\n          setFormData(currData);\n          top = stack.peek();\n        } else {\n          if (top.parKey.length === 0) {\n            setFormData({\n              ...formData,\n              [question.key]: answer\n            });\n          } else {\n            let temp = currData;\n            for (let i=0; i<top.parKey.length; i++) {\n              temp[top.parKey[i]] = Array.isArray(temp[top.parKey[i]]) ? [...temp[top.parKey[i]]] : { ...temp[top.parKey[i]] };\n              temp = temp[top.parKey[i]];\n            }\n            temp[top.i] = Array.isArray(temp[top.i]) ? [...temp[top.i]] : { ...temp[top.i] };\n            let keys = question.key.split('.')\n            if (keys.length === 1) {\n              temp[top.i][question.key] = answer;\n            } else {\n              temp[top.i][keys[0]][keys[1]] = answer;\n            }\n            setFormData(currData);\n          }\n        }\n        console.log(currData)\n        if (ci === top.r) {\n          top.i++;\n          stack.pop();\n          if (top.i === top.total) {\n            ci = ci+1;\n          } else {\n            ci = top.l;\n            stack.push(top.l, top.r, top.i, top.total, top.parKey);\n          }\n        } else {\n          ci = ci+1;\n        }\n        setCurrIdx(ci);\n        if (ci < questions.length) {\n          setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { text: questions[ci].text, sender: 'bot' }\n          ]);\n        } else {\n          console.log(JSON.stringify(unflattenJson(currData), null, 2))\n          setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { text: 'Thank you for providing all the information!', sender: 'bot' },\n          ]);\n        }\n      } else {\n        setChatHistory((prevHistory) => [\n          ...prevHistory,\n          { \n            text: (\n              <Text>\n                <Text as=\"span\" color=\"red.500\" fontWeight=\"bold\">\n                  Invalid input!\n                </Text>{' '}\n                {question.text}\n              </Text>\n            ),\n            sender: 'bot'\n          },\n        ]);\n      }\n      setAnswer('');\n    }\n  }\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        await getProject();\n        // fetch the owner from project id\n        setOwner('Amogha');\n        await fetchQuestions();\n        setLoading(false);\n        // setChatHistory([...chatHistory, { text: 'Please enter the project name', sender: 'bot' }]);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    initialize();\n  }, []);\n\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n\n  const tourSteps = [\n    {\n      target: '.all-steps',\n      content: 'This indicates the current step',\n    },\n    {\n      target: '.chat-history',\n      content: 'This area displays chat history between you and VReqST',\n    },\n    {\n      target: '.user-input',\n      content: 'Reply to each query by typing your answer here',\n    },\n    {\n      target: '.all-steps',\n      content: 'You can go back to any step to edit the answers',\n    },\n  ];\n\n  return loading === true || currProject === null ? (\n    <>\n      <Flex\n        width={\"80vw\"}\n        height={\"85vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <Flex direction=\"column\" h=\"100vh\" justifyContent=\"flex-start\" alignItems=\"center\">\n      <Heading fontSize={{ base: \"3xl\" }} pt=\"2\">\n        <Text as={\"span\"}>\n          {getGreeting()},{\" \"}\n        </Text>\n        <Text as={\"span\"} color={\"blue.400\"}>\n          {owner}\n        </Text>\n      </Heading>\n      <Tabs\n        isFitted w=\"80%\" mt=\"4\"\n        variant=\"soft-rounded\"\n        index={tabIndex}\n        onChange={(index) => setTabIndex(index)}\n        // isDisabled={isTourOpen}\n      >\n        <TabList className=\"all-steps\">\n          {['Scene', 'Article', 'Action-Response', 'Behaviour', 'Timeline'].map((label, index) => (\n            <Tab\n              key={index}\n              bg={getTabColor(index)}\n              _selected={{ bg: getTabColor(index) }}\n              isDisabled={isTourOpen}\n            >\n              {label}\n            </Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <Flex\n              direction=\"column\"\n              w=\"100%\"\n              bg=\"gray.200\"\n              p=\"4\"\n              borderRadius=\"md\"\n              overflowY=\"auto\"\n              height=\"65vh\"\n              mb=\"4\"\n              ref={chatRef}\n              className=\"chat-history\"\n            >\n              {chatHistory.map((chat, index) => (\n                <Box\n                  key={index}\n                  alignSelf={chat.sender === 'user' ? 'flex-end' : 'flex-start'}\n                  bg={chat.sender === 'user' ? 'blue.100' : 'gray.300'}\n                  color={chat.sender === 'user' ? 'black' : 'black'}\n                  borderRadius=\"md\"\n                  p=\"2\"\n                  mb=\"2\"\n                  maxWidth=\"60%\"\n                >\n                  <Text>{chat.text}</Text>\n                </Box>\n              ))}\n            </Flex>\n            <Flex\n              w=\"100%\"\n              bg=\"gray.200\"\n              borderRadius=\"md\"\n              className=\"user-input\"\n            >\n              <Input\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Reply to VReqST...\"\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') handleSend();\n                }}\n                isDisabled={isTourOpen}\n              />\n            </Flex>\n          </TabPanel>\n          <TabPanel>\n            <Text>Article goes here</Text>\n          </TabPanel>\n          <TabPanel>\n            <Text>Action Response goes here</Text>\n          </TabPanel>\n          <TabPanel>\n            <Text>Behaviour goes here</Text>\n          </TabPanel>\n          <TabPanel>\n            <Text>Timeline goes here</Text>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n      <GuidedTour\n        steps={tourSteps}\n        isOpen={isTourOpen}\n        onClose={() => setIsTourOpen(false)}\n      />\n    </Flex>\n  )\n};\n\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}